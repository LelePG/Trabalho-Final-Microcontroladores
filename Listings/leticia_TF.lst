C51 COMPILER V9.60.0.0   LETICIA_TF                                                        11/16/2021 21:59:38 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LETICIA_TF
OBJECT MODULE PLACED IN .\Objects\leticia_TF.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE leticia_TF.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\leticia_TF.lst) TABS(2) OBJECT(.\Objects\leticia_TF.obj)

line level    source

   1          #include <at89x52.h>
   2          #include <lib_timers.h>
   3          #include <lib_7seg.h>
   4          #include <lib_keypad.h>
   5          #include <lib_lcd.h>
   6          #include <lib_ativaAgua.h>
   7          
   8          #define TEMPO_DE_FUNCIONAMENTO 2000 //tempo que a bomba ficará ativada
   9          
  10          //Configurações inicias
  11          void configuraAplicacao();
  12          void configInterrupcoes();
  13          void defineIntervalo(); //define o intervalo em segundos entre as hidratações
  14          //Funções relacionadas à interrupções
  15          void ativaAguaInterrupt();     //liga a flag, disparada por interrupção externa
  16          void defineIntervaloInterrupt(); //liga a flag, disparada por interrupção externa
  17          void verificaSegundo();      //Verifica se um segundo se passou (disparada por interrupção no timer1)
  18          // Outras funções
  19          void ativaAgua();
  20          
  21          //Variáveis globais necessárias para a contagem regressiva
  22          int valorResetaTimer = 200;
  23          int qtdeDeMiliSeg;
  24          int tempoRestante;
  25          
  26          //Flags ativadas pelas interrupções
  27          volatile bit flagAtivaAgua = 0;
  28          volatile bit flagDefineIntervalo = 0;
  29          
  30          void main()
  31          {
  32   1        configuraAplicacao(); //configurações iniciais
  33   1        while (1)
  34   1        {
  35   2          atualizaDisplays(tempoRestante);
  36   2          if (flagAtivaAgua == 1 || tempoRestante == 0)
  37   2          { //condição para ativar agua
  38   3            flagAtivaAgua = 0;
  39   3            ativaAgua();
  40   3            EX1 = 1; //ativa novamente a interrupcao que liga a flag
  41   3          }
  42   2          else if (flagDefineIntervalo == 1)
  43   2          { //confição para mudar o intervalo entre hidratações
  44   3            flagDefineIntervalo = 0;
  45   3            defineIntervalo();
  46   3            EX0 = 1; //ativa novamente a interrupcao que liga a flag
  47   3          }
  48   2        }
  49   1      }
  50          
  51          void configuraAplicacao()
  52          {
  53   1        desligaAtuadores();
  54   1        configLCD();
C51 COMPILER V9.60.0.0   LETICIA_TF                                                        11/16/2021 21:59:38 PAGE 2   

  55   1        configInterrupcoes();
  56   1        defineIntervalo();
  57   1      }
  58          
  59          void configInterrupcoes()
  60          {
  61   1        EA = 1;
  62   1        ET1 = 1;
  63   1        EX0 = 1;
  64   1        EX1 = 1;
  65   1      }
  66          
  67          void defineIntervalo()
  68          {
  69   1        int inputUsuario = 0;
  70   1        desativaT1(); //Para o contador caso ele esteja ligado
  71   1      
  72   1        valorResetaTimer = 0;
  73   1        mensagemInicial();
  74   1      
  75   1        do
  76   1        {
  77   2          valorResetaTimer *= 10;
  78   2          valorResetaTimer += inputUsuario;
  79   2          inputUsuario = identificaCaractere();
  80   2          delayT0(200); //delay para que um aperto não seja considerado como vários
  81   2        } while (inputUsuario >= 0);
  82   1      
  83   1        if (valorResetaTimer < 5) //verificação de seguranca caso o usuário tenha digitado um número baixo de
             -mais
  84   1        { 
  85   2          valorResetaTimer = 5;
  86   2        } else if (valorResetaTimer > 9999){
  87   2          valorResetaTimer = 9999;
  88   2        }
  89   1      
  90   1        clearLCD();
  91   1        tempoRestante = valorResetaTimer; //reinicia a contagem regressiva
  92   1        inicia50msT1();           //liga o contador de segundos novamente
  93   1      }
  94          
  95          void ativaAgua(void)
  96          {
  97   1        EA = 0; //desativa interrupções globais
  98   1      
  99   1        //Um bipe acontece junto com a mensagem
 100   1        ligaBuzzer();
 101   1        mensagemAguaInicial();
 102   1        desligaBuzzer();
 103   1        
 104   1        //desativa displays 7seg
 105   1        unidade = 1;
 106   1        dezena = 1;
 107   1        centena = 1;
 108   1        milhar = 1;
 109   1        desativaT1(); //desliga timer
 110   1      
 111   1        //reseta variáveis globais
 112   1        qtdeDeMiliSeg = 0;
 113   1        tempoRestante = valorResetaTimer;
 114   1      
 115   1        //Ativa componentes
C51 COMPILER V9.60.0.0   LETICIA_TF                                                        11/16/2021 21:59:38 PAGE 3   

 116   1        ligaBomba();
 117   1        ligaLED(TEMPO_DE_FUNCIONAMENTO);
 118   1        desligaBomba();
 119   1        
 120   1        
 121   1        //som na mensagem final
 122   1        ligaBuzzer();
 123   1        mensagemAguaFinal();
 124   1        desligaBuzzer();
 125   1        
 126   1        
 127   1        inicia50msT1();
 128   1        EA = 1; //ativa interrupcoes globais
 129   1      }
 130          
 131          void defineIntervaloInterrupt() interrupt 0 //Interrupção externa 0
 132          {
 133   1        flagDefineIntervalo = 1;
 134   1        EX0 = 0;
 135   1      }
 136          
 137          void ativaAguaInterrupt() interrupt 2 //Interrupção externa 1
 138          {
 139   1        flagAtivaAgua = 1;
 140   1        EX1 = 0;
 141   1      }
 142          
 143          void verificaSegundo() interrupt 3 //Interrupção de estouro do timer 1
 144          {
 145   1        //Verifica se um segundo passou, levando em considera��o que para que isso aconte�a
 146   1        //a fun��o espera 50ms precisa ser executada 200 vezes.
 147   1        desativaT1();       //desliga o timer
 148   1        qtdeDeMiliSeg++;      //mais milissegundos se passaram
 149   1        if (qtdeDeMiliSeg == 200) // um segundo passou
 150   1        {
 151   2          tempoRestante--;   //diminui o valor de segundos exibido no display
 152   2          qtdeDeMiliSeg = 0; //reseta a quantidade de milissegundos
 153   2        }
 154   1        inicia50msT1(); // inicia o timer novamente
 155   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1000    ----
   CONSTANT SIZE    =     67    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
