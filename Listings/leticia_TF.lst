C51 COMPILER V9.60.0.0   LETICIA_TF                                                        11/10/2021 00:27:02 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LETICIA_TF
OBJECT MODULE PLACED IN .\Objects\leticia_TF.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE leticia_TF.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\leticia_TF.lst) TABS(2) OBJECT(.\Objects\leticia_TF.obj)

line level    source

   1          #include<at89x52.h>
   2          #include <libTF.h>
   3          
   4          #define bombaAgua P0_6
   5          #define buzzer P0_7
   6          
   7          //Dados relativos ao display de 7 segmentos
   8          //BCD
   9          #define bitA P1_0
  10          #define bitB P1_1
  11          #define bitC P1_2
  12          #define bitD P1_3
  13          //Multiplexação
  14          #define unidade P1_7
  15          #define dezena P1_6
  16          #define centena P1_5
  17          #define milhar P1_4
  18          
  19          //Dados relativos ao Keypad
  20          #define bitLinhaA P0_0
  21          #define bitLinhaB P0_1
  22          #define bitColuna1 P0_2
  23          #define bitColuna2 P0_3
  24          #define bitColuna3 P0_4
  25          
  26          
  27          #define ledTeste P0_5
  28          
  29          void ativaAgua(void);
  30          void atualizaDisplays(int numero);
  31          void verificaSegundo(); //Verifica se um segundo se passou
  32          int identificaCaractere(void);
  33          void decodificaAlgorismo(int numero);
  34          int defineIntervalo();
  35          void configuraAplicacao();
  36          
  37          int valorResetaTimer = 200;
  38          
  39          int contadorDeMiliSeg;
  40          int segundosDisplay;
  41          
  42          void main(){
  43   1          configuraAplicacao();
  44   1      while(1){
  45   2        
  46   2        atualizaDisplays(segundosDisplay);
  47   2      }
  48   1        //while(1){ 
  49   1            //ativaAgua();
  50   1      //delayT0(100);
  51   1        //  atualizaDisplays(k);
  52   1        
  53   1          //delayT0(100);
  54   1          
C51 COMPILER V9.60.0.0   LETICIA_TF                                                        11/10/2021 00:27:02 PAGE 2   

  55   1      //}
  56   1        }
  57            
  58          void configuraAplicacao(){
  59   1      defineIntervalo();
  60   1      EA = 1;
  61   1      ET1 = 1;
  62   1      EX0 = 1;
  63   1      segundosDisplay = valorResetaTimer;
  64   1      iniciaCont50msT1();
  65   1      } 
  66            
  67          int defineIntervalo(){
  68   1          int inputUsuario;
  69   1        int tempoFinal;
  70   1          do{
  71   2            tempoFinal +=inputUsuario;
  72   2            tempoFinal *= 10;
  73   2            inputUsuario = identificaCaractere();
  74   2          }while(inputUsuario >= 0);
  75   1          valorResetaTimer = tempoFinal;
  76   1          return tempoFinal;
  77   1      } 
  78            
  79            
  80          int identificaCaractere(){
  81   1        
  82   1        
  83   1      while(1){
  84   2        
  85   2        bitLinhaA=0;
  86   2        bitLinhaB=0;
  87   2        if(bitColuna1 == 0 ){
  88   3          return 1;
  89   3        } else if (bitColuna2 ==0){
  90   3          return 2;
  91   3        } else if(bitColuna3 ==0){
  92   3          return 3;
  93   3        }
  94   2        delayT0(65);
  95   2        
  96   2        bitLinhaA=1;
  97   2        bitLinhaB=0;
  98   2        if(bitColuna1 == 0 ){
  99   3          return 4;
 100   3        } else if (bitColuna2 ==0){
 101   3          return 5;
 102   3        } else if(bitColuna3 ==0){
 103   3          return 6;
 104   3        }
 105   2        
 106   2        delayT0(65);
 107   2        
 108   2        bitLinhaA=0;
 109   2        bitLinhaB=1;
 110   2        if(bitColuna1 == 0 ){
 111   3          return 7;
 112   3        } else if (bitColuna2 ==0){
 113   3          return 8;
 114   3        } else if(bitColuna3 ==0){
 115   3          return 9;
 116   3        }
C51 COMPILER V9.60.0.0   LETICIA_TF                                                        11/10/2021 00:27:02 PAGE 3   

 117   2        
 118   2        delayT0(65);
 119   2        
 120   2        bitLinhaA=1;
 121   2        bitLinhaB=1;
 122   2        if(bitColuna1 == 0 ){
 123   3          return -1;//*
 124   3        } else if (bitColuna2 ==0){
 125   3          return 0;
 126   3        } else if(bitColuna3 ==0){
 127   3          return -2;//#
 128   3        }
 129   2        delayT0(65);
 130   2      }
 131   1      }
 132          
 133           //Rotina de ativar a água
 134          void ativaAgua(void){
 135   1        bombaAgua = 0;
 136   1        //luz.setCode(1);
 137   1        buzzer = 1845;
 138   1        delayT0(1000);
 139   1        bombaAgua= 1;
 140   1        buzzer = 0;
 141   1        delayT0(10);
 142   1        
 143   1        
 144   1        //luz.setCode(6);
 145   1      }
 146          
 147          
 148          
 149          
 150          void atualizaDisplays(int numero){
 151   1            //atualiza display da unidade
 152   1            decodificaAlgorismo(numero%10);
 153   1            unidade = 0;
 154   1            delayT0(10);
 155   1            unidade = 1;
 156   1        
 157   1            //atualiza display da dezena
 158   1            decodificaAlgorismo(((int)(numero/10)%10));
 159   1            dezena = 0;
 160   1            delayT0(10);
 161   1            dezena = 1;
 162   1        
 163   1            //atualiza display da centena
 164   1            decodificaAlgorismo(((int)(numero/100)%10));
 165   1            centena = 0;
 166   1            delayT0(10);
 167   1            centena = 1;
 168   1        
 169   1            //atualiza display do milhar
 170   1            decodificaAlgorismo(((int)(numero/1000)%10));
 171   1            milhar = 0;
 172   1            delayT0(10);
 173   1            milhar = 1;
 174   1        
 175   1            return;
 176   1      }
 177          
 178          
C51 COMPILER V9.60.0.0   LETICIA_TF                                                        11/10/2021 00:27:02 PAGE 4   

 179          void verificaSegundo() interrupt 3{
 180   1        //Verifica se um segundo passou, levando em consideração que para que isso aconteça
 181   1        //a função espera 50ms precisa ser executada 200 vezes.
 182   1        desativaT1();
 183   1        contadorDeMiliSeg++; //anota mais uma execução da função espera 50ms
 184   1        if (contadorDeMiliSeg == 200){
 185   2          segundosDisplay--; //diminui o valor de segundos exibido no display
 186   2          contadorDeMiliSeg = 0;
 187   2        }
 188   1        iniciaCont50msT1(); // inicia o contador novamente
 189   1        return;
 190   1      }
 191          
 192          void decodificaAlgorismo(int numero){
 193   1        switch(numero){
 194   2          case 0:
 195   2            bitA = 0;
 196   2            bitB = 0;
 197   2            bitC = 0;
 198   2            bitD = 0;
 199   2            break;
 200   2          case 1:
 201   2            bitA = 1;
 202   2            bitB = 0;
 203   2            bitC = 0;
 204   2            bitD = 0;
 205   2            break;
 206   2          case 2:
 207   2            bitA = 0;
 208   2            bitB = 1;
 209   2            bitC = 0;
 210   2            bitD = 0;
 211   2            break;
 212   2          case 3:
 213   2            bitA = 1;
 214   2            bitB = 1;
 215   2            bitC = 0;
 216   2            bitD = 0;
 217   2            break;
 218   2          case 4:
 219   2            bitA = 0;
 220   2            bitB = 0;
 221   2            bitC = 1;
 222   2            bitD = 0;
 223   2            break;
 224   2          case 5:
 225   2            bitA = 1;
 226   2            bitB = 0;
 227   2            bitC = 1;
 228   2            bitD = 0;
 229   2            break;
 230   2          case 6:
 231   2            bitA = 0;
 232   2            bitB = 1;
 233   2            bitC = 1;
 234   2            bitD = 0;
 235   2            break;
 236   2          case 7:
 237   2            bitA = 1;
 238   2            bitB = 1;
 239   2            bitC = 1;
 240   2            bitD = 0;
C51 COMPILER V9.60.0.0   LETICIA_TF                                                        11/10/2021 00:27:02 PAGE 5   

 241   2            break;
 242   2          case 8:
 243   2            bitA = 0;
 244   2            bitB = 0;
 245   2            bitC = 0;
 246   2            bitD = 1;
 247   2            break;    
 248   2          case 9:
 249   2            bitA = 1;
 250   2            bitB = 0;
 251   2            bitC = 0;
 252   2            bitD = 1;
 253   2            break;
 254   2          
 255   2        }
 256   1        
 257   1        
 258   1        return;
 259   1      }
 260          
 261          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    535    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
